/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton interface for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IC = 258,
     FC = 259,
     KEYWORD_IF = 260,
     KEYWORD_ELSE = 261,
     KEYWORD_PRINT = 262,
     INT = 263,
     REAL = 264,
     ID = 265,
     EQUAL = 266,
     SEMICOLON = 267,
     STR = 268,
     OR = 269,
     AND = 270,
     NOT = 271,
     LEFT_PARAN = 272,
     RIGHT_PARAN = 273,
     DOUBLE_EQUAL = 274,
     LESS_THAN = 275,
     GREATER_THAN = 276,
     ADD = 277,
     SUB = 278,
     MUL = 279,
     DIVIDE = 280,
     LEFT_CURLY = 281,
     RIGHT_CURLY = 282,
     FOR = 283,
     COMMA = 284,
     WHILE = 285,
     KEYWORD_DO = 286
   };
#endif
/* Tokens.  */
#define IC 258
#define FC 259
#define KEYWORD_IF 260
#define KEYWORD_ELSE 261
#define KEYWORD_PRINT 262
#define INT 263
#define REAL 264
#define ID 265
#define EQUAL 266
#define SEMICOLON 267
#define STR 268
#define OR 269
#define AND 270
#define NOT 271
#define LEFT_PARAN 272
#define RIGHT_PARAN 273
#define DOUBLE_EQUAL 274
#define LESS_THAN 275
#define GREATER_THAN 276
#define ADD 277
#define SUB 278
#define MUL 279
#define DIVIDE 280
#define LEFT_CURLY 281
#define RIGHT_CURLY 282
#define FOR 283
#define COMMA 284
#define WHILE 285
#define KEYWORD_DO 286




#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 57 "362.y"
{
    char* id;
    int integer;
    char* code;
    int integer_value;
}
/* Line 1529 of yacc.c.  */
#line 118 "362.tab.h"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

extern YYSTYPE yylval;

